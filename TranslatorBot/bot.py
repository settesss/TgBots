import random
import telebot
import config
from openpyxl import load_workbook

START_COMMAND = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Wooord Hunt!'

HELP_COMMAND = """
–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–ª–æ–≤–∞—Ä—è–º–∏ Wooord Hunt.
–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –Ω–∞–ø–∏—à–∏—Ç–µ /start.
–î–ª—è –ø–æ–º–æ—â–∏, –Ω–∞–ø–∏—à–∏—Ç–µ /help."""

book = load_workbook(filename="D:/words.xlsx")
sheet = book['–õ–∏—Å—Ç1']
SHEET_ROWS_COUNT = sheet.max_row
row_number = None
question_word = None
answer_word = None

bot = telebot.TeleBot(config.TOKEN)


class UserState:
    def __init__(self):
        self.lesson = False
        self.incorrect_answers = []
        self.welcomed = False


user_state = UserState()


@bot.message_handler(commands=['start'])
def handle_start(message):
    user_markup = telebot.types.ReplyKeyboardMarkup(True, True)
    user_markup.row('–ò–∑—É—á–∞—Ç—å —Å–ª–æ–≤–∞ üìñ', '–ú–æ–∏ –æ—à–∏–±–∫–∏ ‚ö†Ô∏è')
    user_markup.row('–ù–∞–≥—Ä–∞–¥—ã ü•á')
    user_markup.row('–ü–æ–º–æ—â—å üÜò')
    user_markup.row('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫ üíé')
    if not user_state.welcomed:
        bot.send_message(message.chat.id, START_COMMAND, reply_markup=user_markup)
        user_state.welcomed = True
    else:
        bot.send_message(message.chat.id, '<b>–û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é...</b>', reply_markup=user_markup, parse_mode='HTML')
    bot.delete_message(message.chat.id, message.message_id)


@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.send_message(message.chat.id, HELP_COMMAND)
    bot.delete_message(message.chat.id, message.message_id)


def ask_question(chat_id):
    global row_number, question_word, answer_word
    row_number = str(random.randrange(1, SHEET_ROWS_COUNT))
    question_word = sheet['A' + row_number].value
    answer_word = sheet['B' + row_number].value
    other_words = [sheet['B' + str(i)].value for i in range(1, SHEET_ROWS_COUNT) if
                   i != row_number]
    other_words_sampled = random.sample(other_words, 3)
    answer_cells = [answer_word] + other_words_sampled
    random.shuffle(answer_cells)
    answer_markup = telebot.types.ReplyKeyboardMarkup(True, False)
    answer_markup.row(answer_cells[0], answer_cells[1])
    answer_markup.row(answer_cells[2], answer_cells[3])
    answer_markup.row("–Ø —É—Å—Ç–∞–ª ‚õî")
    bot.send_message(chat_id, question_word.title(), reply_markup=answer_markup)


@bot.message_handler(content_types=['text'])
def echo(message):
    if message.text.lower() == '–∏–∑—É—á–∞—Ç—å —Å–ª–æ–≤–∞ üìñ':
        user_state.lesson = True
        bot.send_message(message.chat.id, "–ü–æ–µ—Ö–∞–ª–∏!")
        ask_question(message.chat.id)
    elif message.text.lower() == '–º–æ–∏ –æ—à–∏–±–∫–∏ ‚ö†Ô∏è'.lower():
        incorrect_string = ', '.join(user_state.incorrect_answers)
        if len(user_state.incorrect_answers) != 0:
            bot.send_message(message.chat.id, incorrect_string)
        else:
            bot.send_message(message.chat.id, '–£ –í–∞—Å –Ω–µ—Ç –æ—à–∏–±–æ–∫! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!')
        handle_start(message)
    elif message.text.lower() == '–ü–æ–º–æ—â—å üÜò'.lower():
        handle_help(message)
    elif message.text.lower() == '–ø–æ–∫–∞'.lower():
        bot.send_message(message.chat.id, "–¢–æ–ª—å–∫–æ –ø–æ–ø—Ä–æ–±—É–π –Ω–µ –ø—Ä–∏–π—Ç–∏ –∑–∞–≤—Ç—Ä–∞ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ XD")
    elif not answer_word and not user_state.lesson:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ '–∏–∑—É—á–∞—Ç—å —Å–ª–æ–≤–∞ üìñ' –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤.")
        handle_start(message)
    elif message.text.lower() == answer_word:
        bot.send_message(message.chat.id, "–ú–æ–ª–æ–¥–µ—Ü!")
        ask_question(message.chat.id)
    elif message.text.lower() == '–Ø —É—Å—Ç–∞–ª ‚õî'.lower():
        user_state.lesson = False
        handle_start(message)
    elif user_state.lesson:
        user_state.incorrect_answers.append(question_word)
        bot.send_message(message.chat.id, "–ü—Ä–æ–º–∞—Ö, —è –∑–∞–ø–∏—à—É —ç—Ç–æ –≤ –æ—à–∏–±–∫–∏!")
        ask_question(message.chat.id)
    print(f"{message.from_user.first_name}: {message.text}")


bot.polling()
